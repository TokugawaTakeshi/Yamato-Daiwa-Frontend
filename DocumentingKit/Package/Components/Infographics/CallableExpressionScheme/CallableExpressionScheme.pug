include CallableExpressionScheme.class.pug


mixin CallableExpressionScheme--YDF_DK(properties)

  -
    const {
      technicalName,
      headingTag = "div",
      localizedDescriptiveHeading,
      parametersSpecification = [],
      returnedValue,
      signatures
    } = properties


  figure.CallableExpressionScheme--YDF_DK&attributes(attributes)

    #{headingTag}.CallableExpressionScheme--YDF_DK-TechnicalNameHeading= `${ technicalName }`

    if localizedDescriptiveHeading

      .CallableExpressionScheme--YDF_DK-LocalizedDescriptiveHeading= localizedDescriptiveHeading


    if isNonEmptyArray(signatures)

      .CallableExpressionScheme--YDF_DK-SignaturesFlow

        each signature, index in signatures

          - const overloadNumberLabel = CallableExpressionScheme__YDF_DK.localization.buildOverloadNumberLabel(index + 1);

          .CallableExpressionScheme--YDF_DK-Signature

            .CallableExpressionScheme--YDF_DK-Signature-Heading=overloadNumberLabel
            .CallableExpressionScheme--YDF_DK-Signature-LocalizedDescriptiveHeading= signature.localizedDescriptiveHeading

            .CallableExpressionScheme--YDF_DK-ParametersAndReturnedValuesGroup

              span.CallableExpressionScheme--YDF_DK-OpeningCurlyBracket (

              if isNonEmptyArray(signature.parametersSpecification)

                .CallableExpressionScheme--YDF_DK-ParametersFlow

                  each parameterSpecification, index in signature.parametersSpecification

                    - parameterSpecification.number = index + 1

                    +ParameterMetadata--YDF_DK(parameterSpecification)

              span.CallableExpressionScheme--YDF_DK-ClosingBracket ):
              span.CallableExpressionScheme--YDF_DK-ReturnedValue
                if signature.returnedValue
                  | #{signature.returnedValue}
                else
                  | void


    else

      .CallableExpressionScheme--YDF_DK-ParametersAndReturnedValuesGroup

        span.CallableExpressionScheme--YDF_DK-OpeningCurlyBracket (

        if isNonEmptyArray(parametersSpecification)

          .CallableExpressionScheme--YDF_DK-ParametersFlow

            each parameterSpecification, index in parametersSpecification

              - parameterSpecification.number = index + 1

              +ParameterMetadata--YDF_DK(parameterSpecification)

        span.CallableExpressionScheme--YDF_DK-ClosingBracket ):
        span.CallableExpressionScheme--YDF_DK-ReturnedValue
          if returnedValue
            | #{returnedValue}
          else
            | void


    if block

      .CallableExpressionScheme--YDF_DK-AppendixGridFlow
        block
