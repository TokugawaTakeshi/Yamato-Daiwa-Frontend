mixin ComponentMarkupProvidingGuidanceFragment(properties)

  -
    const {
      componentName,
      pugMixinName = `${ componentName }__YDF`
    } = properties

  p.Article-Paragraph.
    Данный #[+Term--YDID компонент] поставляется в виде
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.pug.homePage.mixins }).Article-Link Pug-примеси]
      #[+ImportantEntity__Code--YDID #{ pugMixinName }].
    Способ подключения -
      #[+Link--YDF({ internalURI: localizedRouting.coreLibrary.$children.components.$sectioning.providingOfMarkup.$URI }).Article-Link стандартный]:
      путём #[+Link--YDF({ internalURI: sharedExternalLinks.pug.homePage.includes }).Article-Link включения Pug-файла]
      #[+ImportantEntity__Code--YDID Components.pug] в Ваш #[+Term--YDID pug-файл], при этом туда же
      #[+Keyword--YDID предварительно] должен быть включён файл #[+ImportantEntity__Code--YDID Functionality.pug]
      (последний уже входит в
      #[+Link--YDF({ internalURI: localizedRouting.coreLibrary.$children.markup.$children.pagesTemplates.$URI }).Article-Link шаблоны страниц]
      , предоставляемых #[+ImportantEntity--YDID YDF]).

  +CodeViewer--YDF
    +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Pug })
      +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
        include ../../node_modules/@yamato-daiwa/frontend/Functionality.pug
        include ../../node_modules/@yamato-daiwa/frontend/Components.pug
      +CodeViewer-Explanation--YDF.
        В Вашем случае #[+Term--YDID относительный путь] к директории #[+ImportantEntity--YDID node_modules] может быть
          другим в в зависимости от того, насколько глубже корневой директории проекта находится Ваш Pug-файл с этим кодом.
        Напомним, что одно только включение этих файлов #[+Keyword--YDID никакого] выходного #[+Term--YDID HTML-кода]
          #[+Keyword--YDID не] даст: чтобы сгенерировать #[+Term--YDID HTML-код] компонента
          #[+ImportantEntity--YDID #{ componentName }], нужно вызывать #[+Term--YDID Pug-примесь]
          #[+ImportantEntity__Code--YDID #{ pugMixinName }].


mixin ComponentStylesProvidingGuidanceFragment(properties)

  -
    const {
      componentName,
      stylusMixinName = `provide${ componentName }YDF_Component`
    } = properties

  p.Article-Paragraph.
    Данный #[+Term--YDID компонент] поставляется в виде
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.stylus.homePage.mixins }).Article-Link Stylus-примеси]
      #[+ImportantEntity__Code--YDID #{ stylusMixinName }].
    Способ подключения -
      #[+Link--YDF({ internalURI: localizedRouting.coreLibrary.$children.components.$sectioning.providingOfStyles.$URI }).Article-Link стандартный]:
      путём #[+Link--YDF({ internalURI: sharedExternalLinks.stylus.homePage.includes }).Article-Link включения Stylus-файла]
      #[+ImportantEntity__Code--YDID Components.styl] в Ваш #[+Term--YDID Stylus-файл], при этом туда же
      #[+Keyword--YDID предварительно] должен быть включён файл #[+ImportantEntity__Code--YDID Functionality.styl].

  +CodeViewer--YDF
    +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Stylus })
      +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
        @require "../../node_modules/@yamato-daiwa/frontend/Functionality.styl"
        @require "../../node_modules/@yamato-daiwa/frontend/Components.styl"
      +CodeViewer-Explanation--YDF.
        В Вашем случае #[+Term--YDID относительный путь] к директории #[+ImportantEntity--YDID node_modules] может быть
          другим в в зависимости от того, насколько глубже корневой директории проекта находится Ваш Stylus-файл с этим кодом.
        Напомним, что одно только включение этих файлов #[+Keyword--YDID никакого] выходного #[+Term--YDID CSS-кода]
          #[+Keyword--YDID не] даст: чтобы сгенерировать #[+Term--YDID CSS-код] компонента
          #[+ImportantEntity--YDID #{ componentName }], нужно вызывать #[+Term--YDID Stylus-примесь]
          #[+ImportantEntity__Code--YDID #{ stylusMixinName }].
        Настоятельно рекомендуется предварительно вызывать #[+Term--YDID Stylus-примеси]
          #[+ImportantEntity__Code--YDID CrossBrowserStylesReset] и #[+ImportantEntity__Code--YDID InitialGlobalCSS_Rules],
          чтобы исключить влияние #[+Term--YDID стандартных стилей браузера] и унифицировать основные наследуемые стили,
          такие как размер шрифта и высота строки.
