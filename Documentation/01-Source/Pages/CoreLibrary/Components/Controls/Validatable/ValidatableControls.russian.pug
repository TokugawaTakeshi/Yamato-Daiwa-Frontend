extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ru";
    HTML_PAGE_TITLE = buildHTML_PageTitle("Validatable controls");
    HTML_PageMetaData = {
      description: "",
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon";

    styleSheetsURIs = [ "@Shared/CommonStyles", "@Layouts/TwoColumns/TwoColumnsLayout", "@Shared/ExternalComponents" ];
    scriptsURIs.endOfBody = [ "@Common" ];

    RoutingEmulator.setCurrentRoute("coreLibrary.components.controls.validatable");

    LanguageDropDownList__YDF_DK.setLinks({
      english: "#",
      japanese: "#"
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    h1.Article-Heading1 Валидирующие элементы ввода

    h2.Article-Heading2 Кратко о валидации введённых данных

    p.Article-Paragraph.
      #[+Term--YDID Валидация введённых данных] - сложнейшая задача при разработке #[+Term--YDID GUI-фреймворков],
        если требуется простой программный интерфейс, гибкость и типовая безопасность.
      В рамках разработки #[+ImportantEntity--YDID YDF] мы сделали всё для достижения этой цели.


    h2.Article-Heading2 Концепция валидируемых элементов ввода

    p.Article-Paragraph.
      #[+Keyphrase--YDID На практике] при работе с #[+Term--YDID элементами ввода] нам нужно знать не только введённое значение,
        но и как минимум его #[+Term--YDID валидность].

    +AttentionBox--YDF({ decoration: AttentionBox__YDF.DecorativeVariations.guidance }).Article-AttentionBox
      p.Article-Paragraph.
        #[+DefinableTerm--YDID Валидирующий элемент ввода] (в рамках YDF) - это элемент графического пользовательского
          интерфейса, реализующий интерфейс #[+ImportantEntity__Code--YDID ValidatableControl] и предоставляющий
          другим классам доступ к инстансу класса #[+ImportantEntity__Code--YDID ValidatableControl.Payload],
          содержащего не только введённое значение, но и его валидность.

    p.Article-Paragraph.
      Методы интерфейса #[+ImportantEntity__Code--YDID ValidatableControl] нужны в основном для случая групповой валидации.

    p.Article-Paragraph.
      В идеале, пользователь должен заранее знать, каким правилам должно соответствовать введённое значение, а также
        должны быть приняты меры по недопущению ввода некорректного значения (например, игнорирование ввода любых символов
        кроме цифр).
      Но если пользователь всё же ввёл некорректное значение, необходимо показать пользователю сообщение об ошибке,
        а также убрать его сражу же, как введённое значение станет валидным.
      Многим это может показаться очевидным, однако на огромных количествах сайтов и приложений эти принципы не соблюдаются.


    h2.Article-Heading2 Примеры по возрастанию сложности
    h3.Article-Heading3 Одиночный элемент ввода

    h2.Article-Heading2 Программный интерфейс
