Snackbar = {

  defaultProperties: {

    themes: {
      basic: {


        geometricVariations: {
          basic: {

            rootElement: {
              width: 280px,
              minimalHeight: 40px,
              borderRadius: JQueryUI_BaseTheme.basicBorderRadius,
              paddings: { horizontalSymmetric: 8px }
            },

            icon: {
              width: 20px
            }
          }
        },

        decorativeVariations: {
          success: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.success.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            }
          },
          info: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.info.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            }
          },
          warning: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.warning.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            }
          },
          error: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.error.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            }
          }
        }
      }
    }
  }
}


provideSnackbarComponent(preset = Snackbar.defaultProperties, overridings = {})

  CSS_NAMESPACE = "Snackbar"
  properties = deeplyCloneAndOverrideObject(preset, overridings)


  //    /.Snackbar__SuccessDecoration &
  //
  //      fill: JQueryUI_BaseTheme.success.iconsColor
  //
  //
  //    /.Snackbar__InfoDecoration &
  //
  //      fill: JQueryUI_BaseTheme.info.iconsColor
  //
  //
  //    /.Snackbar__WarningDecoration &
  //
  //      fill: JQueryUI_BaseTheme.warning.iconsColor
  //
  //
  //    /.Snackbar__ErrorDecoration &
  //
  //      fill: JQueryUI_BaseTheme.error.iconsColor
  //
  //

  //
  //
  //  &-DismissButton
  //
  //    ButtonLikeElementsPrimer()
  //
  //    retireFrom({ targetElementSelector: ".Snackbar-Text", x: 8px })
  //    flex-shrink 0
  //
  //    cursor pointer
  //
  //
  //    &-Icon
  //
  //      height 24px


  // === Methods =======================================================================================================
  // --- Basic ---------------------------------------------------------------------------------------------------------
  applyBasicRules()

    .Snackbar

      display flex
      align-items center

      position fixed
      top 96px
      left "calc(50% - 0.5*%s)" % 280px
      z-index: ZIndexes.floatingNotifications


      &-Icon

        flex-shrink 0


  // --- Geometry ------------------------------------------------------------------------------------------------------
  applyGeometricVariation(variation)

    .Snackbar-Message

      MultilineTextWithoutExtraSpaceCausedByLineHeight({ fontSize: 13px, lineHeight: 17px })

      flex-grow 1
      retireFrom({ targetElementSelector: ".Snackbar-Icon", x: 8px })


  // --- Decoration ----------------------------------------------------------------------------------------------------
  applyDecorativeVariation(variation)

    .Snackbar-Message

      color red


  // --- Applying ------------------------------------------------------------------------------------------------------
  applyBasicRules()

  applyComponentThemes({
    CSS_Namespace: CSS_NAMESPACE,
    themes: properties.themes,
    applyGeometricVariation: applyGeometricVariation,
    applyDecorativeVariation: applyDecorativeVariation
  })
