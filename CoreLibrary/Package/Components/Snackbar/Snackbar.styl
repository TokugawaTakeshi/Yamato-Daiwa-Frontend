Snackbar = {

  defaultProperties: {

    themes: {
      basic: {


        geometricVariations: {
          basic: {

            rootElement: {
              width: 280px,
              minimalHeight: 40px,
              borderRadius: JQueryUI_BaseTheme.basicBorderRadius,
              paddings: { horizontalSymmetric: 8px }
            },

            icon: {
              width: 20px
            },

            dismissButton: {
              icon: {
                width: 20px
              }
            }
          }
        },

        decorativeVariations: {

          success: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.success.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            },
            message: {
              fontColor: JQueryUI_BaseTheme.success.fontColor
            },
            icon: {
              color: JQueryUI_BaseTheme.success.iconsColor
            }
          },

          info: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.info.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            },
            message: {
              fontColor: JQueryUI_BaseTheme.info.fontColor
            },
            icon: {
              color: JQueryUI_BaseTheme.info.iconsColor
            }
          },

          warning: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.warning.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            },
            message: {
              fontColor: JQueryUI_BaseTheme.warning.fontColor
            },
            icon: {
              color: JQueryUI_BaseTheme.warning.iconsColor
            }
          },

          error: {
            rootElement: {
              backgroundColor: JQueryUI_BaseTheme.error.background,
              boxShadow: 0 2px 8px rgba(black, 0.25)
            },
            message: {
              fontColor: JQueryUI_BaseTheme.error.fontColor
            },
            icon: {
              color: JQueryUI_BaseTheme.error.iconsColor
            }
          }
        }
      }
    }
  }
}


provideSnackbarComponent(preset = Snackbar.defaultProperties, overridings = {})

  CSS_NAMESPACE = "Snackbar"
  ROOT_ELEMENT_SELECTOR = "." + CSS_NAMESPACE

  properties = deeplyCloneAndOverrideObject(preset, overridings)

  ICON_SELECTOR = "." + buildBEM_Class({ block: CSS_NAMESPACE, element: "Icon", elementSeparator: "-" })
  MESSAGE_SELECTOR = "." + buildBEM_Class({ block: CSS_NAMESPACE, element: "Message", elementSeparator: "-" })
  DISMISS_BUTTON_SELECTOR = "." + buildBEM_Class({ block: CSS_NAMESPACE, element: "DismissButton", elementSeparator: "-" })
  DISMISS_BUTTON_ICON_SELECTOR = "." + buildBEM_Class({ block: CSS_NAMESPACE, element: "DismissButton-Icon", elementSeparator: "-" })


  // === Methods =======================================================================================================
  // --- Basic ---------------------------------------------------------------------------------------------------------
  applyBasicRules()

    {ROOT_ELEMENT_SELECTOR}

      display flex
      align-items center

      position fixed
      top 96px
      left "calc(50% - 0.5*%s)" % 280px
      z-index: ZIndexes.floatingNotifications


    {ICON_SELECTOR}

      flex-shrink 0


    {MESSAGE_SELECTOR}

      flex-grow 1

      retireFrom({ targetElementSelector: ICON_SELECTOR, x: 8px })


    {DISMISS_BUTTON_SELECTOR}

      ButtonLikeElementsPrimer()

      cursor pointer

      retireFrom({ targetElementSelector: MESSAGE_SELECTOR, x: 8px })
      flex-shrink 0


  // --- Geometry ------------------------------------------------------------------------------------------------------
  applyGeometricVariation(variation)

    +DefaultSelector(ROOT_ELEMENT_SELECTOR)

      width variation.rootElement.width
      min-height variation.rootElement.minimalHeight
      border-radius variation.rootElement.borderRadius
      Paddings(variation.rootElement.paddings)


    {ICON_SELECTOR}

      width variation.icon.width


    {MESSAGE_SELECTOR}

      MultilineTextWithoutExtraSpaceCausedByLineHeight({ fontSize: 13px, lineHeight: 17px })


    {DISMISS_BUTTON_ICON_SELECTOR}

      width variation.dismissButton.icon.width


  // --- Decoration ----------------------------------------------------------------------------------------------------
  applyDecorativeVariation(variation)

    +DefaultSelector(ROOT_ELEMENT_SELECTOR)

      background-color variation.rootElement.backgroundColor
      box-shadow variation.rootElement.boxShadow


    {ICON_SELECTOR}

      fill variation.icon.color


    {MESSAGE_SELECTOR}

      color variation.message.fontColor


  // --- Applying ------------------------------------------------------------------------------------------------------
  applyBasicRules()

  applyComponentThemes({
    CSS_Namespace: CSS_NAMESPACE,
    themes: properties.themes,
    applyGeometricVariation: applyGeometricVariation,
    applyDecorativeVariation: applyDecorativeVariation
  })
