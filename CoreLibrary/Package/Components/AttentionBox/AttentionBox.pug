include AttentionBox.class.pug


mixin AttentionBox--YDF(properties)

  -

    const {

      title,
      customSVGIcon,

      theme = AttentionBox__YDF.Themes.regular,
      areThemesExternal = ARE_YDF_COMPONENTS_THEMES_COMMON_BY_DEFAULT || AttentionBox__YDF.areThemesExternal,
      geometry = AttentionBox__YDF.GeometricVariations.regular,
      decoration,

      hasPrependedSVG_Icon = false,
      hasDismissingButton = false

    } = PugMixinsObjectTypeParametersProcessor.processParameter({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: AttentionBox__YDF.propertiesSpecification,
      mixinName: AttentionBox__YDF.CSS_NAMESPACE
    });

    const rootElementModifierCSS_Classes = [
      ...Object.entries(AttentionBox__YDF.Themes).length > 1 && !areThemesExternal ?
          [ ComponentsAuxiliaries.generateThemeCSS_Class(AttentionBox__YDF.CSS_NAMESPACE, theme) ] : [],
      ...Object.entries(AttentionBox__YDF.GeometricVariations).length > 1 ?
          [ ComponentsAuxiliaries.generateGeometricVariationCSS_Class(AttentionBox__YDF.CSS_NAMESPACE, geometry) ] : [],
      ...Object.entries(AttentionBox__YDF.DecorativeVariations).length > 1 ?
          [ ComponentsAuxiliaries.generateDecorativeVariationCSS_Class(AttentionBox__YDF.CSS_NAMESPACE, decoration) ] : []
    ];

    let BASIC_ID;
    let TITLE_HTML_ID;

    if (title) {
      BASIC_ID = AttentionBox__YDF.generateComponentID();
      TITLE_HTML_ID = `${ BASIC_ID }-TITLE`;
    }


  .AttentionBox--YDF&attributes(attributes)(
    class=rootElementModifierCSS_Classes
    role="alert"
  )

    if hasPrependedSVG_Icon

      case decoration

        when AttentionBox__YDF.DecorativeVariations.notice
          +Pencil__Circled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        when AttentionBox__YDF.DecorativeVariations.error
          +ExclamationMark__Circled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        when AttentionBox__YDF.DecorativeVariations.warning
          +ExclamationMark__Triangled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        when AttentionBox__YDF.DecorativeVariations.success
          +Checkmark__Circled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        when AttentionBox__YDF.DecorativeVariations.guidance
          +InfoSign__Circled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        when AttentionBox__YDF.DecorativeVariations.question
          +QuestionMark__Circled__Filled--YDF_Icon.AttentionBox--YDF-SVG_Icon

        default
          if customSVGIcon
            svg.AttentionBox--YDF-SVG_Icon(viewBox=customSVGIcon.viewBox)
              use(xlink:href=customSVGIcon.innerElementID)


    if title

      .AttentionBox--YDF-Title(
        id=TITLE_HTML_ID
      )= title

    .AttentionBox--YDF-MainContent(
      aria-labelledby=(title ? TITLE_HTML_ID : null)
    )

      block


    if hasDismissingButton
      button.AttentionBox--YDF-DismissingButton(
        type="button"
        aria-label= AttentionBox__YDF.localization.dismissingButton.accessibilityGuidance
      ): +MultiplicationSign__Boxed__Filled--YDF_Icon.AttentionBox--YDF-DismissingButton-Icon
