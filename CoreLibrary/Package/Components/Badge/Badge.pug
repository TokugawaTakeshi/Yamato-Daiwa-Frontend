include Badge.class.pug


mixin Badge--YDF(properties)

  -

    const {

      key,
      value,

      theme = Badge__YDF.Themes.regular,
      areThemesCSS_ClassesCommon = ARE_YDF_COMPONENTS_THEMES_COMMON_BY_DEFAULT || Badge__YDF.areThemesCSS_ClassesCommon,
      geometry = Badge__YDF.GeometricVariations.regular,
      geometricModifiers = [],
      decoration,
      decorativeModifiers = []

    } = PugMixinsObjectTypeParametersProcessor.processParameter({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: Badge__YDF.propertiesSpecification,
      mixinName: Badge__YDF.CSS_NAMESPACE
    })

    const rootElementModifierCSS_Classes = [

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: Badge__YDF.Themes,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometry,
        allGeometricVariations: Badge__YDF.GeometricVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedGeometricModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, geometricModifiers),

      ...ComponentsAuxiliaries.addDecorativeVariationCSS_ClassToArrayIfMust({
        decoration,
        allDecorativeVariations: Badge__YDF.DecorativeVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedDecorativeModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, decorativeModifiers)

    ];


  span.Badge--YDF&attributes(attributes)(class=rootElementModifierCSS_Classes)

    if block

      block


    if key

      span.Badge--YDF-Key= key

    span.Badge--YDF-Value= value


mixin Badge--YDF-LoadingPlaceholder(properties)

  -

    const {
      theme = Badge__YDF.Themes.regular,
      areThemesCSS_ClassesCommon = ARE_YDF_COMPONENTS_THEMES_COMMON_BY_DEFAULT || Badge__YDF.areThemesCSS_ClassesCommon,
      geometry = Badge__YDF.GeometricVariations.regular,
      geometricModifiers = []
    } = PugMixinsObjectTypeParametersProcessor.processParameter({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: {
        theme: Badge__YDF.propertiesSpecification.theme,
        areThemesCSS_ClassesCommon: Badge__YDF.propertiesSpecification.areThemesCSS_ClassesCommon,
        geometry: Badge__YDF.propertiesSpecification.geometry,
        geometricModifiers: Badge__YDF.propertiesSpecification.geometricModifiers
      },
      mixinName: `${ Badge__YDF.CSS_NAMESPACE }-LoadingPlaceholder`
    })

    const rootElementModifierCSS_Classes = [

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: Badge__YDF.Themes,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometry,
        allGeometricVariations: Badge__YDF.GeometricVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedGeometricModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, geometricModifiers),

    ];


  span.Badge--YDF.Badge--YDF__LoadingPlaceholder(
    class= rootElementModifierCSS_Classes
  )
