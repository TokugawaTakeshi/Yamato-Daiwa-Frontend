include SingleImageViewer.class.pug


mixin SingleImageViewer--YDF(properties, statesSimulations)

  -

    const {

      imageURI,
      imageAlternateText,
      noFullScreenView = false,
      aspectRatio,
      autoAspectRatioByYDA = false,
      maximalWidth__anyValidCSS_Value,
      maximalHeight__anyValidCSS_Value,

      theme = SingleImageViewer__YDF.Themes.regular,
      areThemesExternal = ARE_YDF_COMPONENTS_THEMES_COMMON_BY_DEFAULT || SingleImageViewer__YDF.areThemesCSS_ClassesCommon,
      geometry = SingleImageViewer__YDF.GeometricVariations.regular,
      decoration = SingleImageViewer__YDF.DecorativeVariations.regular

    } = PugMixinsObjectTypeParametersProcessor.processParameter({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: SingleImageViewer__YDF.propertiesSpecification,
      mixinName: SingleImageViewer__YDF.CSS_NAMESPACE
    });

    const {
      fullScreenView = false
    } = PugMixinsObjectTypeParametersProcessor.processParameter({
      rawParameter: statesSimulations,
      parameterNumber: 2,
      parameterName: "statesSimulations",
      parameterPropertiesSpecification: SingleImageViewer__YDF.statesSimulationsSpecification,
      mixinName: SingleImageViewer__YDF.CSS_NAMESPACE
    });


    let backgroundUnderlayStyles;

    const individualStyles = {
      ...isString(aspectRatio) ? { aspectRatio }  : null,
      ...isNonEmptyString(maximalWidth__anyValidCSS_Value) ? { "max-width": maximalWidth__anyValidCSS_Value } : null,
      ...isNonEmptyString(maximalHeight__anyValidCSS_Value) ? { "max-height": maximalHeight__anyValidCSS_Value } : null
    };

    const rootElementModifierCSS_Classes = [

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: SingleImageViewer__YDF.Themes,
        CSS_Namespace: SingleImageViewer__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometry,
        allGeometricVariations: SingleImageViewer__YDF.GeometricVariations,
        CSS_Namespace: SingleImageViewer__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.addDecorativeVariationCSS_ClassToArrayIfMust({
        decoration,
        allDecorativeVariations: SingleImageViewer__YDF.DecorativeVariations,
        CSS_Namespace: SingleImageViewer__YDF.CSS_NAMESPACE
      })

    ];


  .SingleImageViewer--YDF&attributes(attributes)(
    data-has_full_screen_view__ydf=!noFullScreenView
    class=rootElementModifierCSS_Classes
  )

    if !noFullScreenView

      .SingleImageViewer--YDF-ActionBar

        +Button--YDF({
          HTML_Type: Button__YDF.HTML_Types.regular,
          geometry: Button__YDF.GeometricVariations.small
        }).SingleImageViewer--YDF-Button__FullScreenViewActivating
          +FittingWithin--YDF_Icon.Button--YDF-SVG_Icon
          span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.fullScreenViewActivating.label


    figure.SingleImageViewer--YDF-Figure

      //- [ Theory ] The image could be narrower than below underlay thus underlay could be visible
      picture.SingleImageViewer--YDF-Underlay

        img.SingleImageViewer--YDF-Image(
          src=imageURI
          alt=imageAlternateText
          style=individualStyles
          data-yda-auto_aspect_ratio=autoAspectRatioByYDA
        )

      if block
        figcaption.SingleImageViewer--YDF-Caption
          block


    if !noFullScreenView

      .SingleImageViewer--YDF-ModalView&attributes({
        class: [
          ...fullScreenView ? [] : [ "SingleImageViewer--YDF-ModalView__HiddenState" ]
        ]
      })

        //- TODO Класс "SingleImageViewer--YDF-ModalView-UpperButton" убрать
        +Button--YDF({
          HTML_Type: Button__YDF.HTML_Types.regular
        }).SingleImageViewer--YDF-ModalView-UpperButton.SingleImageViewer--YDF-Button__FullScreenViewDeactivating
          +MultiplicationSign--YDF_Icon.Button--YDF-SVG_Icon
          span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.fullScreenViewDeactivating.label

        figure.SingleImageViewer--YDF-ModalView-PositioningWrapper
          img.SingleImageViewer--YDF-ModalView-Image(
            src= imageURI
            alt= imageAlternateText
            data-yda-auto_aspect_ratio=autoAspectRatioByYDA
          )

        .SingleImageViewer--YDF-ModalView-BottomActionBar

          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.regular
          }).SingleImageViewer--YDF-Button__ZoomingIn
            +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.zoomingIn.label

          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.regular
          }).SingleImageViewer--YDF-Button__ZoomingOut
            +Shrinkage--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.zoomingOut.label

          //- Fitting by width
          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.regular
          }).SingleImageViewer--YDF-Button__WidthFitting
            +FittingByWidth--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.widthFitting.label

          //- Fitting by height
          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.regular
          }).SingleImageViewer--YDF-Button__HeightFitting
            +FittingByHeight--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.heightFitting.label

          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.regular
          }).SingleImageViewer--YDF-Button__FullFitting
            +FittingWithin--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label= SingleImageViewer__YDF.localization.buttons.fitting.label
