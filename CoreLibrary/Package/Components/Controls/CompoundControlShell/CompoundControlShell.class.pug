-

  const CompoundControlShell__YDF = {

    CSS_NAMESPACE: "CompoundControlShell--YDF",


    /* === Themes =================================================================================================== */
    Themes: { regular: "REGULAR" },
    ThemesCSS_ModifiersNames: { REGULAR: "CompoundControlShell--YDF__RegularTheme" },

    defineNewThemes(themesNames) { return ComponentsAuxiliaries.defineNewThemes(themesNames, this); },

    areThemesExternal: false,
    considerThemesAsExternal() {
      this.areThemesExternal = true;
      return this;
    },


    /* --- Geometric variations ------------------------------------------------------------------------------------- */
    GeometricVariations: {
      regular: "REGULAR",
      small: "SMALL"
    },

    GeometricVariationsCSS_ModifiersNames: {
      REGULAR: "CompoundControlShell--YDF__RegularGeometry",
      SMALL: "CompoundControlShell--YDF__SmallGeometry"
    },

    defineNewGeometricVariations(geometricVariationsNames) {
      return ComponentsAuxiliaries.defineNewGeometricVariations(geometricVariationsNames, this);
    },


    /* --- Decorative variations ------------------------------------------------------------------------------------ */
    DecorativeVariations: { regular: "REGULAR" },
    DecorativeVariationsCSS_Modifiers: { REGULAR: "CompoundControlShell--YDF__RegularDecoration" },

    defineNewDecorativeVariation(decorativeVariationsNames) {
      return ComponentsAuxiliaries.defineNewDecorativeVariations(decorativeVariationsNames, this);
    },


    /* === Properties specification ================================================================================= */
    get propertiesSpecification() {
      return {

        label: {
          type: String,
          required: false,
          minimalCharactersCount: 1
        },

        guidance: {
          type: String,
          required: false,
          minimalCharactersCount: 1
        },

        required: {
          type: Boolean,
          required: false
        },

        displayAppropriateBadgeIfInputIsRequired: {
          type: Boolean,
          required: false
        },

        displayAppropriateBadgeIfInputIsOptional: {
          type: Boolean,
          required: false
        },

        coreElementHTML_ID: {
          type: String,
          required: false,
          minimalCharactersCount: 0
        },

        labelElementHTML_ID: {
          type: String,
          required: false,
          minimalCharactersCount: 0
        },

        mainSlotWrapperAdditionalCSS_Classes: {
          type: Array,
          required: false,
          element: {
            type: String,
            minimalCharactersCount: 1
          }
        },

        theme: {
          type: String,
          required: false,
          allowedAlternatives: Object.values(this.Themes)
        },

        externalThemes: {
          type: Boolean,
          required: false
        },

        geometry: {
          type: String,
          required: false,
          allowedAlternatives: Object.values(this.GeometricVariations)
        },

        decoration: {
          type: String,
          required: false,
          allowedAlternatives: Object.values(this.DecorativeVariations)
        }
      }
    },


    /* === State simulations specification ========================================================================== */
    stateSimulationsSpecification: {

      invalidInputHighlightIfAnyErrorsMessages: {
        type: Boolean,
        required: false
      },

      errorsMessages: {
        type: Array,
        required: false,
        element: {
          type: String,
          minimalCharactersCount: 1
        }
      }
    },


    /* === Localization ============================================================================================= */
    localization: {
      requirementBadges: {
        required: "Required",
        optional: "Optional"
      }
    }
  };
