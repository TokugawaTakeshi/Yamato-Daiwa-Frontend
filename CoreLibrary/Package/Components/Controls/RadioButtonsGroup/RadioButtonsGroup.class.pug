-

  class RadioButtonsGroup__YDF {

    static CSS_NAMESPACE = "RadioButtonsGroup--YDF";


    /* ━━━ Theming ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static Themes = { regular: "REGULAR" };

    static selfAndCompoundControlShellThemesCorrespondence = {
      [RadioButtonsGroup__YDF.Themes.regular]: CompoundControlShell__YDF.Themes.regular
    };

    static defineNewThemes(ownAndCorrespondingCompoundControlShellThemes_Names) {
      return ComponentsAuxiliaries.defineThemesAndAssociateThemWithParentCompoundControlShellOnes(
        ownAndCorrespondingCompoundControlShellThemes_Names, RadioButtonsGroup__YDF
      );
    }

    static areThemesCSS_ClassesCommon = ARE_YDF_COMPONENTS_THEMES_COMMON_BY_DEFAULT;

    static considerThemesAsCommon() {
      RadioButtonsGroup__YDF.areThemesCSS_ClassesCommon = true;
      return RadioButtonsGroup__YDF;
    };


    /* ─── Geometry ───────────────────────────────────────────────────────────────────────────────────────────────── */
    static GeometricVariations = {
      regular: "REGULAR",
      small: "SMALL"
    };

    static selfAndCompoundControlShellGeometricVariationsCorrespondence = {
      [RadioButtonsGroup__YDF.GeometricVariations.regular]: CompoundControlShell__YDF.GeometricVariations.regular,
      [RadioButtonsGroup__YDF.GeometricVariations.small]: CompoundControlShell__YDF.GeometricVariations.small
    };

    static defineNewGeometricVariations(ownAndCorrespondingCompoundControlShellGeometricVariations_Names) {
      return ComponentsAuxiliaries.defineGeometricVariationAndAssociateThemWithParentCompoundControlShellOnes(
        ownAndCorrespondingCompoundControlShellGeometricVariations_Names, RadioButtonsGroup__YDF
      );
    }


    /* ─── Decoration ─────────────────────────────────────────────────────────────────────────────────────────────── */
    static DecorativeVariations = { regular: "REGULAR" };

    static selfAndCompoundControlShellDecorativeVariationsCorrespondence = {
      [RadioButtonsGroup__YDF.DecorativeVariations.regular]: CompoundControlShell__YDF.DecorativeVariations.regular
    };

    static defineNewDecorativeVariation(ownAndCorrespondingCompoundControlShellDecorativeVariations_Names) {
      return ComponentsAuxiliaries.defineDecorativeVariationAndAssociateThemWithParentCompoundControlShellOnes(
        ownAndCorrespondingCompoundControlShellDecorativeVariations_Names, RadioButtonsGroup__YDF
      );
    }


    /* ━━━ Properties specification ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static propertiesSpecification = {

      selectingOptions: {

        type: Array,
        required: true,

        element: {
          type: Object,
          properties: {
            label: {
              type: String,
              minimalCharactersCount: 1
            },
            value: {
              type: String,
              minimalCharactersCount: 1
            },
            checked: {
              type: Boolean
            }
          }
        }

      },

      label: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      accessibilityGuidance: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      externalLabelHTML_ID: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      guidance: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      disabled: {
        type: Boolean,
        required: false
      },

      readonly: {
        type: Boolean,
        required: false
      },

      required: {
        type: Boolean,
        required: false
      },

      mustDisplayAppropriateBadgeIfInputIsRequired: {
        type: Boolean,
        required: false
      },

      mustDisplayAppropriateBadgeIfInputIsOptional: {
        type: Boolean,
        required: false
      },

      mustAddInvisibleBadgeForHeightEqualizingWhenNoBadge: {
        type: Boolean,
        required: false
      },

      theme: {
        type: String,
        required: false,
        allowedAlternatives: Object.values(RadioButtonsGroup__YDF.Themes)
      },

      areThemesCSS_ClassesCommon: {
        type: Boolean,
        required: false
      },

      geometry: {
        type: String,
        required: false,
        allowedAlternatives: Object.values(RadioButtonsGroup__YDF.GeometricVariations)
      },

      decoration: {
        type: String,
        required: false,
        allowedAlternatives: Object.values(RadioButtonsGroup__YDF.DecorativeVariations)
      },

      labelElementHTML_ID: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      radioButtonsHTML_Name: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      }

    };


    /* ━━━ State simulations specification ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static statesSimulationsSpecification = {

      invalidInputHighlightingIfAnyValidationErrorsMessages: ComponentsAuxiliaries.
          validatableControlGeneralStatesSimulationsSpecification.invalidInputHighlightingIfAnyValidationErrorsMessages,

      validValueHighlightingIfNoValidationErrorsMessages: ComponentsAuxiliaries.
          validatableControlGeneralStatesSimulationsSpecification.validValueHighlightingIfNoValidationErrorsMessages,

      validationErrorsMessages: ComponentsAuxiliaries.validatableControlGeneralStatesSimulationsSpecification.
          validationErrorsMessages,

      asynchronousValidationsStatuses: ComponentsAuxiliaries.validatableControlGeneralStatesSimulationsSpecification.
          asynchronousValidationsStatuses

    };


    /* ━━━ Routines ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    /* ─── ID generating ──────────────────────────────────────────────────────────────────────────────────────────── */
    static counterForID_Generating = 0;

    static generateComponentID() {
      RadioButtonsGroup__YDF.counterForID_Generating++;
      return `RADIO_BUTTONS_GROUP--YDF-${ RadioButtonsGroup__YDF.counterForID_Generating }`;
    }

  }
