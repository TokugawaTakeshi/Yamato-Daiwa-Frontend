-

  class ComponentsAuxiliaries {

    static defineNewThemes(themesNames, TargetComponentClass) {

      for (const themeName of themesNames) {
        TargetComponentClass.Themes[toLowerCamelCase(themeName)] = toScreamingSnakeCase(themeName);
      }

      return TargetComponentClass;

    }

    static defineNewGeometricVariations(geometricVariationsNames, TargetComponentClass) {

      for (const geometricVariationName of geometricVariationsNames) {
        TargetComponentClass.GeometricVariations[toLowerCamelCase(geometricVariationName)] =
            toScreamingSnakeCase(geometricVariationName);
      }

      return TargetComponentClass;

    }

    static defineNewDecorativeVariations(decorativeVariationsNames, TargetComponentClass) {

      for (const decorativeVariationName of decorativeVariationsNames) {
        TargetComponentClass.DecorativeVariations[toLowerCamelCase(decorativeVariationName)] =
            toScreamingSnakeCase(decorativeVariationName);;
      }

      return TargetComponentClass;

    }


    static generateThemeCSS_Class(CSS_Namespace, themeName) {
      return `${ CSS_Namespace }__${ toUpperCamelCase(themeName) }Theme`
    }

    static generateGeometricVariationCSS_Class(CSS_Namespace, geometricVariationName) {
      return `${ CSS_Namespace }__${ toUpperCamelCase(geometricVariationName) }Geometry`
    }

    static generateDecorativeVariationCSS_Class(CSS_Namespace, decorativeVariationName) {
      return `${ CSS_Namespace }__${ toUpperCamelCase(decorativeVariationName) }Decoration`
    }

    static generateGeometricModifierCSS_Class(CSS_Namespace, geometricModifierName) {
      return `${ CSS_Namespace }__${ toUpperCamelCase(geometricModifierName) }GeometricModifier`
    }

    static generateDecorativeModifierCSS_Class(CSS_Namespace, decorativeModifierName) {
      return `${ CSS_Namespace }__${ toUpperCamelCase(decorativeModifierName) }DecorativeModifier`
    }


    /** @deprecated */
    static defineNewThemes(themesNames, TargetComponentClass) {

      for (const themeName of themesNames) {

        const themeName__lowerCamelCase = toLowerCamelCase(themeName);
        const themeName__upperCamelCase = toUpperCamelCase(themeName);
        const themeName__screamingSnakeCase = toScreamingSnakeCase(themeName);

        TargetComponentClass.Themes[themeName__lowerCamelCase] = themeName__screamingSnakeCase;
        TargetComponentClass.ThemesCSS_ModifiersNames[themeName__screamingSnakeCase] =
            `${TargetComponentClass.CSS_NAMESPACE}__YDF-${themeName__upperCamelCase}Theme`;

      }

      return TargetComponentClass;
    }

    /** @deprecated */
    static defineNewGeometricVariations(geometricVariationsNames, TargetComponentClass) {

      for (const geometricVariationName of geometricVariationsNames) {

        const geometricVariationsName__lowerCamelCase = toLowerCamelCase(geometricVariationName);
        const geometricVariationsName__upperCamelCase = toUpperCamelCase(geometricVariationName);
        const geometricVariationsName__screamingSnakeCase = toScreamingSnakeCase(geometricVariationName);

        TargetComponentClass.GeometricVariations[geometricVariationsName__lowerCamelCase] =
            geometricVariationsName__screamingSnakeCase;
        TargetComponentClass.GeometricVariationsCSS_ModifiersNames[geometricVariationsName__screamingSnakeCase] =
            `${TargetComponentClass.CSS_NAMESPACE}--YDF__${geometricVariationsName__upperCamelCase}Geometry`;

      }

      return TargetComponentClass;
    }

    /** @deprecated */
    static defineNewDecorativeVariations(decorativeVariationsNames, TargetComponentClass) {

      for (const decorativeVariationName of decorativeVariationsNames) {

        const decorativeVariationsName__lowerCamelCase = toLowerCamelCase(decorativeVariationName);
        const decorativeVariationsName__upperCamelCase = toUpperCamelCase(decorativeVariationName);
        const decorativeVariationsName__screamingSnakeCase = toScreamingSnakeCase(decorativeVariationName);

        TargetComponentClass.DecorativeVariations[decorativeVariationsName__lowerCamelCase] =
            decorativeVariationsName__screamingSnakeCase;
        TargetComponentClass.DecorativeVariationsCSS_Modifiers[decorativeVariationsName__screamingSnakeCase] =
            `${TargetComponentClass.CSS_NAMESPACE}--YDF__${decorativeVariationsName__upperCamelCase}Decoration`;

      }

      return TargetComponentClass;
    }

    static defineThemesAndAssociateThemWithParentCompoundControlShellOnes(
      ownAndCorrespondingCompoundControlShellThemes_Names,
      TargetComponentClass
    ) {

      ComponentsAuxiliaries.defineNewThemes(Object.keys(ownAndCorrespondingCompoundControlShellThemes_Names));

      for (
        const [ ownThemeName, compoundControlShell_sThemeName ] of
        Object.entries(ownAndCorrespondingCompoundControlShellThemes_Names)
      ) {
        /* [ Optimization ] The recomputing of screaming shake case (usually 1-2 words) which already has been computed
         * in `defineNewThemes` is cheaper for the performance than creating of additional methods, caching variables etc. */
        TargetComponentClass.selfAndCompoundControlShellThemesCorrespondence[themeName__screamingSnakeCase(ownThemeName)] =
            compoundControlShell_sThemeName;
      }

      return TargetComponentClass;
    }

    static defineGeometricVariationAndAssociateThemWithParentCompoundControlShellOnes(
      ownAndCorrespondingCompoundControlShellGeometricVariations_Names,
      TargetComponentClass
    ) {

      ComponentsAuxiliaries.defineNewGeometricVariations(
        Object.keys(ownAndCorrespondingCompoundControlShellGeometricVariations_Names)
      );

      for (
        const [ ownGeometricVariationName, compoundControlShell_sGeometricVariationName ] of
        Object.entries(ownAndCorrespondingCompoundControlShellGeometricVariations_Names)
      ) {
        /* [ Optimization ] The recomputing of screaming shake case (usually 1-2 words) which already has been computed
         * in `defineNewGeometricVariations` is cheaper for the performance than creating of additional methods, caching variables etc.  */
        TargetComponentClass.selfAndCompoundControlShellGeometricVariationsCorrespondence[
          ownGeometricVariationName(ownGeometricVariationName)
        ] = compoundControlShell_sGeometricVariationName;
      }

      return TargetComponentClass;
    }

    static defineDecorativeVariationAndAssociateThemWithParentCompoundControlShellOnes(
      ownAndCorrespondingCompoundControlShellDecorativeVariations_Names,
      TargetComponentClass
    ) {

      ComponentsAuxiliaries.defineNewDecorativeVariations(
        Object.keys(ownAndCorrespondingCompoundControlShellDecorativeVariations_Names)
      );

      for (
        const [ ownDecorativeVariationName, compoundControlShell_sDecorativeVariationName ] of
        Object.entries(ownAndCorrespondingCompoundControlShellDecorativeVariations_Names)
      ) {
        /* [ Optimization ] The recomputing of screaming shake case (usually 1-2 words) which already has been computed
         * in `defineNewDecorativeVariations` is cheaper for the performance than creating of additional methods, caching variables etc. */
        TargetComponentClass.selfAndCompoundControlShellDecorativeVariationsCorrespondence[
          ownDecorativeVariationName(ownDecorativeVariationName)
        ] = compoundControlShell_sDecorativeVariationName;
      }

      return TargetComponentClass;
    }
  }
