getLineSpacingByFontSizeAndLineHeight(compoundParameter, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "getLineSpacingByFontSizeAndLineHeight",
    targetParameterNumber: 1,
    targetParameter: compoundParameter,
    schema: {
      fontSize: {
        type: DataTypes.dimensionalAmount,
        required: true
      },
      lineHeight: {
        type: DataTypes.dimensionalAmount DataTypes.dimensionlessAmount,
        required: true
      }
    },
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })

  fontSize = compoundParameter.fontSize
  lineHeight = compoundParameter.lineHeight
  lineHeight__dimensionalAmount = isDimensionlessAmount(lineHeight) ? lineHeight * fontSize : lineHeight

  return buildCalcExpression(
    "${lineHeight__dimensionalAmount} - ${fontSize}",
    { lineHeight__dimensionalAmount: round(lineHeight__dimensionalAmount), fontSize: fontSize }
  )
