TextElementHeightSizingTypes--YDF = {
  fixed: "FIXED",
  natural: "NATURAL"
}

TextElementHeightSizingSpecificationSchema--YDF = {

  type: {
    type: DataTypes.string,
    required: true,
    allowedAlternatives: values(TextElementHeightSizingTypes--YDF)
  },

  fixedHeight: {
    type: DataTypes.dimensionalQuantity,
    requiredIf: {
      predicate: @(textElementHeightSizingSpecification) {
        return textElementHeightSizingSpecification.type == TextElementHeightSizingTypes--YDF.fixed
      },
      conditionDescription: "'type' is 'TextElementHeightSizingTypes--YDF.fixed'"
    }
  },


  borders: {
    type: DataTypes.object,
    defaultValue: {},
    properties: BordersSizingSpecificationSchema--YDF
  },


  paddings: {
    type: DataTypes.object,
    defaultValue: {},
    properties: PaddingsSpecificationSchema--YDF
  },

  isExplicitPaddingZeroDeclarationRequired: {
    type: DataTypes.boolean
  },


  fontSize: {
    type: DataTypes.dimensionalQuantity,
    required: true
  },

  lineSpacing: {
    type: DataTypes.dimensionalQuantity
  },

  lineHeight: {
    type: DataTypes.dimensionalQuantity DataTypes.dimensionlessQuantity,
    requiredIf: {
      predicate: @(compoundParameter) { return isNull(compoundParameter.lineSpacing) },
      descriptionForLogging: "The 'lineSpacing' is not specified"
    },
    incompatibleWith: "lineSpacing",
  },

  fixedLinesCount: {
    type: DataTypes.dimensionlessQuantity
    required: false,
    minimalValue: 1
  },

  mustMakeLineHeightEqualToFontSizeWhenLineSpacingIs0: {
    type: DataTypes.boolean,
    defaultValue: true
  },

  mustApplyDimensionalLineHeightIfPossible: {
    type: DataTypes.boolean,
    defaultValue: false
  },

  mustReduceVerticalPaddingsByExtraSpaceCausedByLineHeight: {
    type: DataTypes.boolean,
    defaultValue: false
  },

  mustFixateHeight: {
    type: DataTypes.boolean
  }

}
