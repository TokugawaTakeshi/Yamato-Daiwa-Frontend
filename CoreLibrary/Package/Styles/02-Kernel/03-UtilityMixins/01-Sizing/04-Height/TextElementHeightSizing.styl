computeTotalHeightByTextElementHeightSizingSpecification(textElementHeightSizingSpecification, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "computeTotalHeightByTextElementHeightSizingSpecification",
    targetParameterNumber: 1,
    targetParameter: textElementHeightSizingSpecification,
    schema: TextElementHeightSizingSpecificationSchema,
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })

  if isNotNull(textElementHeightSizingSpecification.fixedHeight)

    return textBoxLikeElementsHeightSizingSpecification.fixedHeight


TextElementHeightSizing(textElementHeightSizingSpecification, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "TextElementHeightSizing",
    targetParameterNumber: 1,
    targetParameter: textElementHeightSizingSpecification,
    schema: TextElementHeightSizingSpecificationSchema,
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })

  sizingType = textElementHeightSizingSpecification.type
  fixedHeight = textElementHeightSizingSpecification.fixedHeight

  topOrBottomSymmetricBordersWidths = textElementHeightSizingSpecification.topOrBottomSymmetricBordersWidths
  topBorderWidth = textElementHeightSizingSpecification.topBorderWidth
  bottomBorderWidth = textElementHeightSizingSpecification.bottomBorderWidth
  explicitBorderNoneDeclarationRequired = textElementHeightSizingSpecification.explicitBorderNoneDeclarationRequired

  topOrBottomSymmetricPaddings = textElementHeightSizingSpecification.topOrBottomSymmetricPaddings
  topPadding = textElementHeightSizingSpecification.topPadding
  bottomPadding = textElementHeightSizingSpecification.bottomPadding
  paddingsOffset = textElementHeightSizingSpecification.paddingsOffset
  explicitPaddingZeroDeclarationRequired = textElementHeightSizingSpecification.explicitPaddingZeroDeclarationRequired

  fontFamily = textElementHeightSizingSpecification.fontFamily
  fontSize = textElementHeightSizingSpecification.fontSize
  linesCount = textElementHeightSizingSpecification.linesCount
  lineHeight = substituteNull(textElementHeightSizingSpecification.lineHeight, linesCount == 1 ? fontSize : BASIC_LINE_HEIGHT_IN_MULTILINE_TEXT_BLOCKS)

  lineSpacing = textElementHeightSizingSpecification.lineSpacing

  if (isNull(lineSpacing))

    lineHeight__dimensionalValue = isUnitlessNumber(lineHeight) ? lineHeight * fontSize : lineHeight

    lineSpacing = linesCount > 1 ?\
        buildCalcExpression(\
          "${lineHeight__dimensionalValue} - ${fontSize}",\
          { lineHeight__dimensionalValue: lineHeight__dimensionalValue, fontSize: fontSize }\
        ) : 0

  fixateHeight = textElementHeightSizingSpecification.fixedHeight


  // --- Borders -------------------------------------------------------------------------------------------------------
  if isNull(topOrBottomSymmetricBordersWidths) && isNull(topBorderWidth) &&\
      isNull(bottomBorderWidth) && isTrue(explicitBorderNoneDeclarationRequired)

    border-top none
    border-bottom none

  else if isNotNull(topOrBottomSymmetricBordersWidths)

    border-top-width topOrBottomSymmetricBordersWidths
    border-bottom-width topOrBottomSymmetricBordersWidths

  else

    if isNotNull(topBorderWidth)

      border-top-width topBorderWidth

    else if isTrue(explicitBorderNoneDeclarationRequired)

      border-top none


    if isNotNull(bottomBorderWidth)

      border-bottom-width bottomBorderWidth

    else if isTrue(explicitBorderNoneDeclarationRequired)

      border-bottom none


  // --- Paddings ------------------------------------------------------------------------------------------------------
  if sizingType == TextElementHeightSizingTypes.natural

    if isNull(topOrBottomSymmetricPaddings) && isNull(topPadding) &&\
        isNull(bottomPadding) && isTrue(explicitPaddingZeroDeclarationRequired)

      padding-top 0
      padding-bottom 0

    else if isNotNull(topOrBottomSymmetricPaddings)

      padding-top topOrBottomSymmetricPaddings
      padding-bottom topOrBottomSymmetricPaddings

    else

      if isNotNull(topPadding)

        padding-top topPadding

      else if isTrue(explicitPaddingZeroDeclarationRequired)

        padding-top 0


      if isNotNull(bottomPadding)

        padding-bottom bottomPadding

      else if isTrue(explicitPaddingZeroDeclarationRequired)

        padding-bottom 0


  // --- Font ----------------------------------------------------------------------------------------------------------
  font-family fontFamily
  font-size fontSize
  line-height lineHeight


  // --- Height --------------------------------------------------------------------------------------------------------
  if sizingType == TextElementHeightSizingTypes.natural

    height = buildCalcExpression(\
      "${topBorderWidth} + ${bottomBorderWidth} + " +\
      "${topPadding} + ${bottomPadding} + " +\
      "${linesCount}*${fontSize} + ${lineSpacing}*(${linesCount} - 1)",\
      {
        topBorderWidth: nullToZero(topBorderWidth),
        bottomBorderWidth: nullToZero(bottomBorderWidth),
        topPadding: nullToZero(topPadding),
        bottomPadding: nullToZero(bottomPadding),
        linesCount: linesCount,
        fontSize: fontSize,
        lineSpacing: lineSpacing
      }
    )

    if fixedHeight

      height height


  if sizingType == TextElementHeightSizingTypes.fixed

    height fixedHeight


specifyTextElementHeightSizing(textElementHeightSizingSpecification, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "specifyTextElementHeightSizing",
    targetParameterNumber: 1,
    targetParameter: textElementHeightSizingSpecification,
    schema: TextElementHeightSizingSpecificationSchema,
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })

  return {

    type: textElementHeightSizingSpecification.type,
    fixedHeight: textElementHeightSizingSpecification.fixedHeight,

    topOrBottomSymmetricBordersWidths: textElementHeightSizingSpecification.topOrBottomSymmetricBordersWidths,
    topBorderWidth: textElementHeightSizingSpecification.topBorderWidth,
    bottomBorderWidth: textElementHeightSizingSpecification.bottomBorderWidth,
    explicitBorderNoneDeclarationRequired: textElementHeightSizingSpecification.explicitBorderNoneDeclarationRequired,

    topOrBottomSymmetricPaddings: textElementHeightSizingSpecification.topOrBottomSymmetricPaddings,
    topPadding: textElementHeightSizingSpecification.topPadding,
    bottomPadding: textElementHeightSizingSpecification.bottomPadding,
    paddingsOffset: textElementHeightSizingSpecification.paddingsOffset,
    symmetricComputedPaddings: textElementHeightSizingSpecification.symmetricComputedPaddings,
    explicitPaddingZeroDeclarationRequired: textElementHeightSizingSpecification.explicitPaddingZeroDeclarationRequired,

    fontFamily: textElementHeightSizingSpecification.fontFamily,
    fontSize: textElementHeightSizingSpecification.fontSize,
    lineSpacing: textElementHeightSizingSpecification.lineSpacing,
    lineHeight: textElementHeightSizingSpecification.lineHeight,
    linesCount: textElementHeightSizingSpecification.linesCount,

    fixateHeight: textElementHeightSizingSpecification.fixateHeight
  }
