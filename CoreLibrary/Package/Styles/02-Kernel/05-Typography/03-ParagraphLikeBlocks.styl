ParagraphDefaultProperties--YDF = {
  geometry: {
    text: {
      size: BASIC_FONT_SIZE_IN_MULTILINE_TEXT_BLOCKS,
      lineSpacing: null,
      lineHeight: BASIC_LINE_HEIGHT_IN_MULTILINE_TEXT_BLOCKS
    }
  },
  decoration: {
    text: {
      fontWeight: null,
      color: null
    }
  }
}


Paragraph--YDF(
  preset = ParagraphDefaultProperties--YDF,
  overridings = {},
  options = {
    geometryOnly: false,
    decorationOnly: false
  }
)

  properties = deeplyCloneAndOverrideObject(preset, overridings)

  mustGenerateGeometry = isTrue(options.geometryOnly) || isFalse(options.decorationOnly)
  mustGenerateDecoration = isTrue(options.decorationOnly) || isFalse(options.geometryOnly)


  if mustGenerateGeometry

    applyTextGeometryWithoutExtraSpaceCausedByLineHeight({
      fontSize: properties.geometry.text.size,
      lineHeight: properties.geometry.text.lineHeight,
      lineSpacing: properties.geometry.text.lineSpacing,
      mustTryToProvideHyphenations: true
    })

    applyMixinStoredInObjectIfItIsNotNull(properties.geometry.customDeclarations)


  if mustGenerateDecoration

    applyIfNotNull({
      font-weight: properties.decoration.text.fontWeight,
      color: properties.decoration.text.color
    })

    applyMixinStoredInObjectIfItIsNotNull(properties.decoration.customDeclarations)


AbstractDefaultProperties--YDF = {
  geometry: {
    fontSize: BASIC_FONT_SIZE_IN_MULTILINE_TEXT_BLOCKS,
    lineHeight: BASIC_LINE_HEIGHT_IN_MULTILINE_TEXT_BLOCKS,
    paddings: { horizontalSymmetric: 24px }
  },
  decoration: {
    fontColor: ShadesOfGray__39ColorsW3C_Palette[12]
  }
}


Abstract--YDF(preset = AbstractDefaultProperties--YDF, overridings = {})

  properties = deeplyCloneAndOverrideObject(preset, overridings)


  // --- Geometry ------------------------------------------------------------------------------------------------------
  Paddings(properties.geometry.paddings)

  applyTextGeometryWithoutExtraSpaceCausedByLineHeight({
    fontSize: properties.geometry.fontSize,
    lineHeight: properties.geometry.lineHeight,
    mustTryToProvideHyphenations: true
  })

  applyIfNotNull(properties.geometry.customDeclarations)


  // --- Decoration ----------------------------------------------------------------------------------------------------
  applyIfNotNull({
    color: properties.decoration.fontColor
  })

  applyIfNotNull(properties.decoration.customDeclarations)
