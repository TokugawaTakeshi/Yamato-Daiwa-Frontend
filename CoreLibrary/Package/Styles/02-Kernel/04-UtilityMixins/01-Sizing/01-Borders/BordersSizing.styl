BordersSizing(bordersSpecification = {}, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "BordersSizing",
    targetParameterNumber: 1,
    targetParameter: bordersSpecification,
    schema: BordersSizingSpecificationSchema--YDF,
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })


  applyIfNotNull({

    border-width: getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.all"),
    border-left-width: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.horizontalSymmetric"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.left")
    )),
    border-right-width: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.horizontalSymmetric"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.right")
    )),
    border-top-width: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.verticalSymmetric"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.top")
    )),
    border-bottom-width: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.verticalSymmetric"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "thickness.bottom")
    )),

    border-radius: getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.all"),
    border-top-left-radius: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.topLeft"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.topFillets"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.leftFillets")
    )),
    border-top-right-radius: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.topRight"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.topFillets"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.rightFillets")
    )),
    border-bottom-left-radius: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.bottomLeft"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.bottomFillets"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.leftFillets")
    )),
    border-bottom-right-radius: getFirstNonNullArrayElement(arrayConstructor__POLYFILL(
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.bottomRight"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.bottomFillets"),
      getObjectValueByDotSeparatedPathSafely(bordersSpecification, "radius.rightFillets")
    ))
  })


specifyBordersSizing(bordersSizingSpecification, restParameters__MUST_NOT_BE...)

  validateObjectTypeParameter({
    mixinOrFunctionName: "specifyBordersSizing",
    targetParameterNumber: 1,
    targetParameter: bordersSizingSpecification,
    schema: BordersSizingSpecificationSchema--YDF,
    followingParametersWhichMustNotBe: restParameters__MUST_NOT_BE
  })

  bordersThicknessSpecification = substituteNull(bordersSizingSpecification.thickness, {})
  bordersRadiusSpecification = substituteNull(bordersSizingSpecification.radius, {})


  return {
    thickness: {
      all: bordersThicknessSpecification.all,
      horizontalSymmetric: bordersThicknessSpecification.horizontalSymmetric,
      left: bordersThicknessSpecification.left,
      right: bordersThicknessSpecification.right,
      verticalSymmetric: bordersThicknessSpecification.verticalSymmetric,
      top: bordersThicknessSpecification.top,
      bottom: bordersThicknessSpecification.bottom,
    },
    radius: {
      all: bordersRadiusSpecification.all,
      topLeft: bordersRadiusSpecification.topLeft,
      topRight: bordersRadiusSpecification.topRight,
      bottomLeft: bordersRadiusSpecification.bottomLeft,
      bottomRight: bordersRadiusSpecification.bottomRight,
      leftFillets: bordersRadiusSpecification.leftFillets,
      rightFillets: bordersRadiusSpecification.rightFillets,
      topFillets: bordersRadiusSpecification.topFillets,
      bottomFillets: bordersRadiusSpecification.bottomFillets
    }
  }
