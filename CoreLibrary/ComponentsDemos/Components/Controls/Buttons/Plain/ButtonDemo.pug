mixin ButtonDemo(options)

  -

    options = options ?? {
      headings: true,
      partials: {
        defaultOptionals: true,

      }
    }

    ThemesShowcase__YDF.
        setDefaultThemeKeyLabelPrefix("Button__YDF.Themes.").
        setDefaultGeometricVariationLabelPrefix("Button__YDF.GeometricVariations.").
        setDefaultDecorativeVariationLabelPrefix("Button__YDF.DecorativeVariations.");

    const themeShowcaseCurrentIternationData = ThemesShowcase__YDF.initializeCurrentIterationData()

    function skipDecorativeVariationIf(iterationData) {
      return (
        iterationData.decorativeVariation.value === Button__YDF.DecorativeVariations.linkLike &&
        iterationData.geometricVariation.value !== Button__YDF.GeometricVariations.linkLike
      ) ||
      (
        iterationData.decorativeVariation.value !== Button__YDF.DecorativeVariations.linkLike &&
        iterationData.geometricVariation.value === Button__YDF.GeometricVariations.linkLike
      );
    }


  if options.headings

    h1.Heading1 Button component testing


  //- === Default optionals ============================================================================================
  if options.partials.defaultOptionals

    if options.headings

      h2.Heading2 Default optionals

    +ThemesShowcase--YDF({
      themes: Button__YDF.Themes,
      geometricVariations: Button__YDF.GeometricVariations,
      decorativeVariations: Button__YDF.DecorativeVariations,
      iterationData: themeShowcaseCurrentIternationData,
      skipDecorativeVariationIf: skipDecorativeVariationIf
    })

      dl.ButtonDemo-ButtonSubtypesPseudoTable

        dt Button
        dd
          +Button--YDF({
            label: "Teksto 本文",
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })

        dt Link
        dd
          +Button--YDF({
            label: "Teksto 本文",
            URI: "#",
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })

        dt Input
        dd
          +Button--YDF({
            label: "Teksto 本文",
            HTML_Type: Button__YDF.HTML_Types.inputButton,
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })


  //- === Multiline safety test ========================================================================================
  if options.partials.defaultOptionals

    if options.headings

      h2.Heading2 Default optionals

    +ThemesShowcase--YDF({
      themes: Button__YDF.Themes,
      geometricVariations: Button__YDF.GeometricVariations,
      decorativeVariations: Button__YDF.DecorativeVariations,
      iterationData: themeShowcaseCurrentIternationData,
      skipDecorativeVariationIf: skipDecorativeVariationIf
    })

      dl.ButtonDemo-ButtonSubtypesPseudoTable

        dt Button
        dd
          +Button--YDF({
            label: "SuperHyperMegaExtraVeryLongLabelTryToBreakMeHaHaHaHaHaHaHaHa",
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })

        dt Link
        dd
          +Button--YDF({
            label: "SuperHyperMegaExtraVeryLongLabelTryToBreakMeHaHaHaHaHaHaHaHa",
            URI: "#",
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })

        dt Input
        dd
          +Button--YDF({
            label: "SuperHyperMegaExtraVeryLongLabelTryToBreakMeHaHaHaHaHaHaHaHa",
            HTML_Type: Button__YDF.HTML_Types.inputButton,
            theme: themeShowcaseCurrentIternationData.theme.value,
            geometry: themeShowcaseCurrentIternationData.geometricVariation.value,
            decoration: themeShowcaseCurrentIternationData.decorativeVariation.value
          })


  //-

    +ButtonsShowcase({ caption: "Prepended icon" })

      tr
        td
          +Button--YDF
            +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label Like us on FaceTube
        td
          +Button--YDF({ URI: "#" })
            +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label Like us on FaceTube
        td Unavailable


    +ButtonsShowcase({ caption: "Appended icon" })

      tr
        td
          +Button--YDF
            span.Button--YDF-Label Like us on FaceTube
            +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
        td
          +Button--YDF({ URI: "#" })
            span.Button--YDF-Label Like us on FaceTube
            +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
        td Unavailable


      +ButtonsShowcase({ caption: "Lone SVG icon" })

        tr
          td
            +Button--YDF({ accessibilityGuidance: "Search" })
              +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
          td
            +Button--YDF({ URI: "#", accessibilityGuidance: "Search" })
              +MagnifyingGlass--YDF_Icon.Button--YDF-SVG_Icon
          td Impossible
