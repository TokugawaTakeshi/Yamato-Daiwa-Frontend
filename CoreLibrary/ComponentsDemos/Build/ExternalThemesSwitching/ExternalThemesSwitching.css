/*
 * @yamato-daiwa/frontend v1.0
 * (c) 2021 Sole proprietorship "Yamato Daiwa" Takeshi Tokugawa
 * Released under the MIT License.
 */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video {
  border: 0;
  font-size: 100%;
  margin: 0;
  padding: 0;
  vertical-align: baseline;
}
article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section {
  display: block;
}
h1,h2,h3,h4,h5,h6 {
  font-weight: 400;
}
body {
  line-height: 1;
}
ol,ul {
  list-style: none;
}
a {
  color: #000;
  outline: none;
  text-decoration: none;
}
blockquote,q {
  quotes: none;
}
blockquote:after,blockquote:before,q:after,q:before {
  content: "";
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
th {
  font-weight: 400;
}
button:focus,input:focus,select:focus,textarea:focus {
  outline: none;
}
input {
  box-shadow: none;
}
hr {
  border-width: 0;
  margin: 0;
}
* {
  box-sizing: border-box;
}
body,html {
  height: 100%;
}
html {
  font-family: system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,Liberation Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
  font-size: 14px;
  line-height: 1;
}
sub {
  vertical-align: sub;
}
sub,sup {
  font-size: 10px;
  margin-left: 1px;
}
sup {
  vertical-align: super;
}
.Heading1 {
  color: #202020;
  font-size: 3.4rem;
  line-height: 1.058823529411765;
}
.Heading1:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading1:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading2 {
  color: #404040;
  font-size: 3rem;
  line-height: 1.066666666666667;
}
.Heading2:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading2:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading1+.Heading2 {
  margin-top: 16px;
}
.Heading3 {
  color: #606060;
  font-size: 2.6rem;
  line-height: 1.076923076923077;
}
.Heading3:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading3:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading2+.Heading3 {
  margin-top: 12px;
}
.Heading4 {
  color: #787878;
  font-size: 2.2rem;
  line-height: 1.090909090909091;
}
.Heading4:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading4:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading3+.Heading4 {
  margin-top: 10px;
}
.Heading5 {
  color: #989898;
  font-size: 1.8rem;
  line-height: 1.111111111111111;
}
.Heading5:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading5:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading4+.Heading5 {
  margin-top: 8px;
}
.Heading6 {
  color: #b0b0b0;
  font-size: 1.4rem;
  line-height: 1.142857142857143;
}
.Heading6:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Heading6:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading5+.Heading6 {
  margin-top: 6px;
}
.Subheading1 {
  color: #505050;
  font-size: 3.1rem;
  line-height: 1.064516129032258;
}
.Subheading1:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading1:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading1+.Subheading1 {
  margin-top: 4px;
}
.Subheading1+.Heading2 {
  margin-top: 12px;
}
.Subheading2 {
  color: #606060;
  font-size: 2.7rem;
  line-height: 1.074074074074074;
}
.Subheading2:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading2:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading2+.Subheading2 {
  margin-top: 4px;
}
.Subheading2+.Heading3 {
  margin-top: 12px;
}
.Subheading3 {
  color: #787878;
  font-size: 2.3rem;
  line-height: 1.086956521739131;
}
.Subheading3:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading3:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading3+.Subheading3 {
  margin-top: 2px;
}
.Subheading3+.Heading4 {
  margin-top: 10px;
}
.Subheading4 {
  color: #989898;
  font-size: 1.9rem;
  line-height: 1.105263157894737;
}
.Subheading4:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading4:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading4+.Subheading4 {
  margin-top: 4px;
}
.Subheading4+.Heading5 {
  margin-top: 10px;
}
.Subheading5 {
  color: #b0b0b0;
  font-size: 1.5rem;
  line-height: 1.133333333333333;
}
.Subheading5:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading5:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading5+.Subheading5 {
  margin-top: 4px;
}
.Subheading5+.Heading6 {
  margin-top: 10px;
}
.Subheading6 {
  color: #c8c8c8;
  font-size: 1.1rem;
  line-height: 1.181818181818182;
}
.Subheading6:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.Subheading6:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.Heading6+.Subheading6 {
  margin-top: 4px;
}
.Paragraph {
  font-size: 14px;
  -webkit-hyphens: auto;
          hyphens: auto;
  line-height: 1.4;
}
.Paragraph:before {
  content: "";
  display: block;
  margin-top: -2.8px;
}
.Paragraph:after {
  content: "";
  display: block;
  margin-bottom: -2.8px;
}
.Paragraph+.Paragraph {
  margin-top: .8rem;
}
.Heading1+.Paragraph,.Subheading1+.Paragraph {
  margin-top: 12px;
}
.Heading2+.Paragraph {
  margin-top: 16px;
}
.Paragraph+.Heading2 {
  margin-top: 24px;
}
.Heading3+.Paragraph,.Subheading2+.Paragraph {
  margin-top: 16px;
}
.Paragraph+.Heading3 {
  margin-top: 24px;
}
.Heading4+.Paragraph,.Subheading3+.Paragraph {
  margin-top: 16px;
}
.Paragraph+.Heading4 {
  margin-top: 24px;
}
.Heading5+.Paragraph,.Subheading4+.Paragraph {
  margin-top: 16px;
}
.Paragraph+.Heading5 {
  margin-top: 24px;
}
.Heading6+.Paragraph,.Subheading5+.Paragraph {
  margin-top: 16px;
}
.Paragraph+.Heading6 {
  margin-top: 24px;
}
.Subheading6+.Paragraph {
  margin-top: 16px;
}
.UnorderedList {
  list-style-position: inside;
  list-style-type: disc;
}
.UnorderedList li {
  font-size: 14px;
  -webkit-hyphens: auto;
          hyphens: auto;
  line-height: 1.4;
  margin-bottom: -2.8px;
  margin-top: -2.8px;
}
.UnorderedList li+li {
  padding-top: 8px;
}
.UnorderedList ul {
  list-style-type: circle;
  padding-left: 28px;
}
.UnorderedList ul ul {
  list-style-type: square;
}
.Heading1+.UnorderedList {
  margin-top: 12px;
}
.Heading2+.UnorderedList {
  margin-top: 10px;
}
.UnorderedList+.Heading2 {
  margin-top: 14px;
}
.Heading3+.UnorderedList {
  margin-top: 8px;
}
.Paragraph+.UnorderedList,.UnorderedList+.Heading3 {
  margin-top: 12px;
}
.UnorderedList+.Paragraph {
  margin-top: 1.2rem;
}
.UnorderedList+.UnorderedList {
  margin-top: 12px;
}
.OrderedList {
  list-style-position: outside;
  list-style-type: decimal;
  padding-left: 28px;
}
.OrderedList li {
  font-size: 14px;
  line-height: 1.4;
  word-break: break-all;
}
.OrderedList li:before {
  content: "";
  display: block;
  margin-top: -2.8px;
}
.OrderedList li:after {
  content: "";
  display: block;
  margin-bottom: -2.8px;
}
.OrderedList li+li {
  margin-top: 8px;
}
.OrderedList ol {
  list-style-type: lower-alpha;
  padding-left: 10px;
}
.OrderedList ol ol {
  list-style-type: lower-roman;
}
.Heading1+.OrderedList {
  margin-top: 12px;
}
.Heading2+.OrderedList {
  margin-top: 10px;
}
.OrderedList+.Heading2 {
  margin-top: 14px;
}
.Paragraph+.OrderedList {
  margin-top: 12px;
}
.OrderedList+.Paragraph {
  margin-top: 1.2rem;
}
.UnorderedList+.OrderedList {
  margin-top: 12px;
}
.DescriptionList dt {
  font-size: 1rem;
  font-weight: 700;
  -webkit-hyphens: auto;
          hyphens: auto;
  line-height: 1.2;
}
.DescriptionList dt:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.DescriptionList dt:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.DescriptionList dd {
  font-size: 1rem;
  -webkit-hyphens: auto;
          hyphens: auto;
  line-height: 1.2;
  padding-left: 10px;
}
.DescriptionList dd:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.DescriptionList dd:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.DescriptionList dt+dd {
  margin-top: 6px;
}
.DescriptionList dd+dt,.Heading1+.DescriptionList {
  margin-top: 12px;
}
.Heading2+.DescriptionList {
  margin-top: 10px;
}
.DescriptionList+.Heading2 {
  margin-top: 14px;
}
.Paragraph+.DescriptionList {
  margin-top: 12px;
}
.DescriptionList+.Paragraph {
  margin-top: 1.2rem;
}
.UnorderedList+.DescriptionList {
  margin-top: 12px;
}
.Link {
  background-image: linear-gradient(rgba(0,62,255,.5), rgba(0,62,255,.5));
  background-position: bottom 0 center;
  background-repeat: no-repeat;
  background-size: 100% 1px;
  color: #003eff;
  cursor: pointer;
  display: inline-block;
  line-height: 1;
  padding-bottom: 2px;
}
.Link:focus,.Link:hover {
  background-image: linear-gradient(rgba(0,127,255,.75), rgba(0,127,255,.75));
  color: #007fff;
}
.Link:focus {
  outline: none;
}
.Link:active {
  background-image: linear-gradient(#777620, #777620);
  color: #777620;
}
.Link.Link__DisabledState {
  background-image: linear-gradient(rgba(0,127,255,.5), rgba(0,127,255,.5));
  color: #007fff;
}
.ThemesShowcase--YDF>li+li {
  margin-top: 12px;
}
.ThemesShowcase--YDF>li li+li {
  margin-top: 8px;
}
.ThemesShowcase--YDF-Label {
  color: #606060;
  font-size: 1.2rem;
  font-weight: 700;
  line-height: 1.166666666666667;
}
.ThemesShowcase--YDF-Label:before {
  content: "";
  display: block;
  margin-top: -.1rem;
}
.ThemesShowcase--YDF-Label:after {
  content: "";
  display: block;
  margin-bottom: -.1rem;
}
.ThemesShowcase--YDF-ChildList {
  border-left: 3px solid #dcdcdc;
  padding-left: 8px;
}
.ThemesShowcase--YDF-Label+.ThemesShowcase--YDF-ChildList {
  margin-top: 4px;
}
.ComponentTestingPageContent {
  margin-left: auto;
  margin-right: auto;
  max-width: 640px;
  min-width: 320px;
  padding: 12px 16px;
  width: 100%;
}
.ComponentTestingPageContent .Heading2+.ThemesShowcase--YDF {
  margin-top: 8px;
}
.ComponentTestingPageContent .ThemesShowcase--YDF+.Heading2 {
  margin-top: 16px;
}
.ComponentTestingPageContent .Heading3+.ThemesShowcase--YDF {
  margin-top: 6px;
}
.ComponentTestingPageContent .ThemesShowcase--YDF+.Heading3 {
  margin-top: 12px;
}
.Button--YDF {
  background: none;
  border: none;
  border-radius: 0;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
  line-height: 1;
  padding: 0;
  text-decoration: none;
}
.Button--YDF:disabled {
  cursor: not-allowed;
}
a.Button--YDF,button.Button--YDF {
  align-items: center;
  display: inline-flex;
  justify-content: center;
}
a.Button--YDF {
  text-align: center;
}
input.Button--YDF {
  white-space: break-spaces;
  word-break: break-all;
}
a.Button--YDF__DisabledState {
  pointer-events: none;
}
.Button--YDF-Label {
  word-break: break-all;
}
.Button--YDF-SVG_Icon {
  flex-shrink: 0;
}
.Badge--YDF__LoadingPlaceholder {
  display: inline-block;
}
.Button--YDF__RegularGeometry {
  border-radius: 3px;
  border-width: 1px;
  min-width: 6rem;
}
a.Button--YDF__RegularGeometry .Button--YDF-Label,button.Button--YDF__RegularGeometry .Button--YDF-Label {
  font-size: 1rem;
  line-height: 1.1rem;
  margin-bottom: .4rem;
  margin-top: .4rem;
}
a.Button--YDF__RegularGeometry .Button--YDF-Label:first-child,button.Button--YDF__RegularGeometry .Button--YDF-Label:first-child {
  margin-left: 1rem;
}
a.Button--YDF__RegularGeometry .Button--YDF-Label:last-child,button.Button--YDF__RegularGeometry .Button--YDF-Label:last-child {
  margin-right: 1rem;
}
input.Button--YDF__RegularGeometry {
  font-size: 1rem;
  line-height: 1.1rem;
  padding: .4rem 1rem;
}
.Button--YDF__RegularGeometry .Button--YDF-SVG_Icon {
  height: 1rem;
  margin-bottom: .45rem;
  margin-top: .45rem;
}
.Button--YDF__RegularGeometry .Button--YDF-SVG_Icon:first-child {
  margin-left: .75rem;
}
.Button--YDF__RegularGeometry .Button--YDF-SVG_Icon:last-child {
  margin-right: .75rem;
}
.Button--YDF__RegularGeometry .Button--YDF-Label+.Button--YDF-SVG_Icon {
  margin-left: .5rem;
}
.Button--YDF__RegularGeometry .Button--YDF-SVG_Icon+.Button--YDF-Label {
  margin-left: .4rem;
}
.Button--YDF__RegularGeometry .Button--YDF-SVG_Icon.Button--YDF-SVG_Icon__Menu__ThreeDots__Horizontal {
  width: 1rem;
}
.Button--YDF__SmallGeometry {
  border-radius: 3px;
  border-width: 1px;
  min-width: 4rem;
}
a.Button--YDF__SmallGeometry .Button--YDF-Label,button.Button--YDF__SmallGeometry .Button--YDF-Label {
  font-size: .9rem;
  line-height: 1rem;
  margin-bottom: .3rem;
  margin-top: .2rem;
}
a.Button--YDF__SmallGeometry .Button--YDF-Label:first-child,button.Button--YDF__SmallGeometry .Button--YDF-Label:first-child {
  margin-left: .6rem;
}
a.Button--YDF__SmallGeometry .Button--YDF-Label:last-child,button.Button--YDF__SmallGeometry .Button--YDF-Label:last-child {
  margin-right: .6rem;
}
input.Button--YDF__SmallGeometry {
  font-size: .9rem;
  line-height: 1rem;
  padding: .2rem .6rem .3rem;
}
.Button--YDF__SmallGeometry .Button--YDF-SVG_Icon {
  height: .8rem;
  margin-bottom: .25rem;
  margin-top: .25rem;
}
.Button--YDF__SmallGeometry .Button--YDF-SVG_Icon:first-child {
  margin-left: .75rem;
}
.Button--YDF__SmallGeometry .Button--YDF-SVG_Icon:last-child {
  margin-right: .75rem;
}
.Button--YDF__SmallGeometry .Button--YDF-Label+.Button--YDF-SVG_Icon {
  margin-left: .5rem;
}
.Button--YDF__SmallGeometry .Button--YDF-SVG_Icon+.Button--YDF-Label {
  margin-left: .4rem;
}
.Button--YDF__SmallGeometry .Button--YDF-SVG_Icon.Button--YDF-SVG_Icon__Menu__ThreeDots__Horizontal {
  width: 1rem;
}
a.Button--YDF__LinkLikeGeometry .Button--YDF-Label,button.Button--YDF__LinkLikeGeometry .Button--YDF-Label {
  font-size: 1rem;
  line-height: 1.1rem;
  margin-bottom: -.05rem;
  margin-top: -.05rem;
}
input.Button--YDF__LinkLikeGeometry {
  font-size: 1rem;
  line-height: 1.1rem;
  padding-bottom: -.05rem;
  padding-top: -.05rem;
}
.Button--YDF__LinkLikeGeometry .Button--YDF-SVG_Icon {
  height: 1rem;
  margin-bottom: .25rem;
  margin-top: .25rem;
}
.Button--YDF__LinkLikeGeometry .Button--YDF-Label+.Button--YDF-SVG_Icon {
  margin-left: .5rem;
}
.Button--YDF__LinkLikeGeometry .Button--YDF-SVG_Icon+.Button--YDF-Label {
  margin-left: .4rem;
}
.Button--YDF__LinkLikeGeometry .Button--YDF-SVG_Icon.Button-SVG_Icon__Menu__ThreeDots__Horizontal {
  width: 1rem;
}
.RegularTheme--YDF .Button--YDF__RegularDecoration {
  background-color: #f6f6f6;
  border-color: #c5c5c5;
  border-style: solid;
  color: #454545;
}
.RegularTheme--YDF .Button--YDF__RegularDecoration .Button--YDF-SVG_Icon {
  fill: #454545;
}
.RegularTheme--YDF .Button--YDF__RegularDecoration:hover {
  background-color: #ededed;
  border-color: #ccc;
  color: #2b2b2b;
}
.RegularTheme--YDF .Button--YDF__RegularDecoration:focus {
  box-shadow: 0 0 3px 1px #007fff;
}
.RegularTheme--YDF .Button--YDF__RegularDecoration:active {
  background-color: #007fff;
  border-color: #003eff;
  color: #fff;
}
a.RegularTheme--YDF .Button--YDF__RegularDecoration.Button--YDF__DisabledState,button.RegularTheme--YDF .Button--YDF__RegularDecoration:disabled,input.RegularTheme--YDF .Button--YDF__RegularDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}
.RegularTheme--YDF .Button--YDF__AccentedDecoration {
  background-color: #007fff;
  border-color: #003eff;
  border-style: solid;
  color: #fff;
}
.RegularTheme--YDF .Button--YDF__AccentedDecoration .Button--YDF-SVG_Icon {
  fill: #fff;
}
.RegularTheme--YDF .Button--YDF__AccentedDecoration:hover {
  background-color: #ededed;
  border-color: #ccc;
  color: #2b2b2b;
}
.RegularTheme--YDF .Button--YDF__AccentedDecoration:focus {
  box-shadow: 0 0 3px 1px #007fff;
}
.RegularTheme--YDF .Button--YDF__AccentedDecoration:active {
  background-color: #f6f6f6;
  border-color: #c5c5c5;
  color: #454545;
}
a.RegularTheme--YDF .Button--YDF__AccentedDecoration.Button--YDF__DisabledState,button.RegularTheme--YDF .Button--YDF__AccentedDecoration:disabled,input.RegularTheme--YDF .Button--YDF__AccentedDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}
.RegularTheme--YDF .Button--YDF__LinkLikeDecoration {
  color: #003eff;
  text-decoration-color: #003eff;
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
.RegularTheme--YDF .Button--YDF__LinkLikeDecoration .Button--YDF-SVG_Icon {
  fill: #003eff;
}
.RegularTheme--YDF .Button--YDF__LinkLikeDecoration:hover {
  text-decoration-color: rgba(0,62,255,.75);
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
.RegularTheme--YDF .Button--YDF__LinkLikeDecoration:focus {
  box-shadow: 0 0 3px 1px #007fff;
}
.RegularTheme--YDF .Button--YDF__LinkLikeDecoration:active {
  color: rgba(0,62,255,.75);
  text-decoration-color: rgba(0,62,255,.75);
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
a.RegularTheme--YDF .Button--YDF__LinkLikeDecoration.Button--YDF__DisabledState,button.RegularTheme--YDF .Button--YDF__LinkLikeDecoration:disabled,input.RegularTheme--YDF .Button--YDF__LinkLikeDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}
.CupertinoTheme--YDF .Button--YDF__RegularDecoration {
  background-image: linear-gradient(180deg, #e5f2fb 0, #e5f2fb 50%, #d8ecf9 51%, #f5fafe);
  border-color: #aed0ea;
  border-style: solid;
  color: #2779aa;
}
.CupertinoTheme--YDF .Button--YDF__RegularDecoration .Button--YDF-SVG_Icon {
  fill: #2779aa;
}
.CupertinoTheme--YDF .Button--YDF__RegularDecoration:hover {
  background-image: linear-gradient(180deg, #eff7fd 0, #eff7fd 50%, #e5f1fb 51%, #f5fafe);
  border-color: #74b2e2;
  color: #0070a3;
}
.CupertinoTheme--YDF .Button--YDF__RegularDecoration:focus {
  box-shadow: 0 0 3px 1px #62bcea;
}
.CupertinoTheme--YDF .Button--YDF__RegularDecoration:active {
  background-image: linear-gradient(180deg, #62bcea 0, #62bcea 50%, #38ace4 51%, #77c5ed);
  border-color: #2694e8;
  color: #fff;
}
a.CupertinoTheme--YDF .Button--YDF__RegularDecoration.Button--YDF__DisabledState,button.CupertinoTheme--YDF .Button--YDF__RegularDecoration:disabled,input.CupertinoTheme--YDF .Button--YDF__RegularDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}
.CupertinoTheme--YDF .Button--YDF__AccentedDecoration {
  background-color: #ffffe0;
  border-color: #003eff;
  border-style: solid;
  color: #fff;
}
.CupertinoTheme--YDF .Button--YDF__AccentedDecoration .Button--YDF-SVG_Icon {
  fill: #fff;
}
.CupertinoTheme--YDF .Button--YDF__AccentedDecoration:hover {
  background-color: #ededed;
  border-color: #ccc;
  color: #2b2b2b;
}
.CupertinoTheme--YDF .Button--YDF__AccentedDecoration:focus {
  box-shadow: 0 0 3px 1px #007fff;
}
.CupertinoTheme--YDF .Button--YDF__AccentedDecoration:active {
  background-color: #f6f6f6;
  border-color: #c5c5c5;
  color: #454545;
}
a.CupertinoTheme--YDF .Button--YDF__AccentedDecoration.Button--YDF__DisabledState,button.CupertinoTheme--YDF .Button--YDF__AccentedDecoration:disabled,input.CupertinoTheme--YDF .Button--YDF__AccentedDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}
.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration {
  color: #003eff;
  text-decoration-color: red;
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration .Button--YDF-SVG_Icon {
  fill: #003eff;
}
.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration:hover {
  text-decoration-color: rgba(0,62,255,.75);
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration:focus {
  box-shadow: 0 0 3px 1px #007fff;
}
.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration:active {
  color: rgba(0,62,255,.75);
  text-decoration-color: rgba(0,62,255,.75);
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
}
a.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration.Button--YDF__DisabledState,button.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration:disabled,input.CupertinoTheme--YDF .Button--YDF__LinkLikeDecoration:disabled {
  background-color: #f5f5f5;
  border-color: #dcdcdc;
  color: #b0b0b0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
