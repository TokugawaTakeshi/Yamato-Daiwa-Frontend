.CompoundControlShell--YDF(
  :class="rootElementModifierCSS_Classes"
)

  .CompoundControlShell--YDF-Header(
    v-if="mustDisplayHeader"
  )

    label.CompoundControlShell--YDF-Label(
      v-if="label"
      :for="coreElementHTML_ID"
      :id="labelElementHTML_ID"
    ) {{ label }}

    span.CompoundControlShell--YDF-Badge.CompoundControlShell--YDF-Badge__RequiredInput(
      v-if="required && mustDisplayAppropriateBadgeIfInputIsRequired"
    ) {{ localization.requirementBadges.required }}

    span.CompoundControlShell--YDF-Badge.CompoundControlShell--YDF-Badge__OptionalInput(
      v-else-if="!required && mustDisplayAppropriateBadgeIfInputIsOptional"
    ) {{ localization.requirementBadges.optional }}

    span.CompoundControlShell--YDF-Badge.CompoundControlShell--YDF-Badge__Invisible(
      v-else-if="mustAddInvisibleBadgeForHeightEqualizingWhenNoBadge"
    )


  p.CompoundControlShell--YDF-Guidance(
    v-if="guidance"
    v-html="guidance"
  )


  .CompoundControlShell--YDF-MainSlotCustomizableWrapper(
    :class="mainSlotWrapperAdditionalCSS_Classes"
  ): slot


  HorizontallySlidingContainer.CompoundControlShell--YDF-ErrorsMessagesCollapsableContainer(
    :expanded="invalidInputHighlightingIfAnyValidationErrorsMessages && validationErrorsMessages.length > 0"
    HTML_Tag="ul"
    :mustAnimateHeightWhenContentsAreChanged="true"
  )

    li.CompoundControlShell--YDF-ErrorMessage(
      v-for="validationErrorMessage of validationErrorsMessages"
      :key="`VALIDATION_ERROR_MESSAGE-${ validationErrorMessage }`"
    ) {{ validationErrorMessage }}
